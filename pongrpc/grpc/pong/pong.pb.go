// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pong.proto

package pong

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Notification Messages
type NotificationType int32

const (
	NotificationType_UNKNOWN               NotificationType = 0
	NotificationType_MESSAGE               NotificationType = 1
	NotificationType_GAME_START            NotificationType = 2
	NotificationType_GAME_END              NotificationType = 3
	NotificationType_OPPONENT_DISCONNECTED NotificationType = 4
	NotificationType_BET_AMOUNT_UPDATE     NotificationType = 5
	NotificationType_PLAYER_JOINED_WR      NotificationType = 6
	NotificationType_ON_WR_CREATED         NotificationType = 7
	NotificationType_ON_PLAYER_READY       NotificationType = 8
	NotificationType_ON_WR_REMOVED         NotificationType = 9
	NotificationType_PLAYER_LEFT_WR        NotificationType = 10
	NotificationType_COUNTDOWN_UPDATE      NotificationType = 11
	NotificationType_GAME_READY_TO_PLAY    NotificationType = 12
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "MESSAGE",
		2:  "GAME_START",
		3:  "GAME_END",
		4:  "OPPONENT_DISCONNECTED",
		5:  "BET_AMOUNT_UPDATE",
		6:  "PLAYER_JOINED_WR",
		7:  "ON_WR_CREATED",
		8:  "ON_PLAYER_READY",
		9:  "ON_WR_REMOVED",
		10: "PLAYER_LEFT_WR",
		11: "COUNTDOWN_UPDATE",
		12: "GAME_READY_TO_PLAY",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN":               0,
		"MESSAGE":               1,
		"GAME_START":            2,
		"GAME_END":              3,
		"OPPONENT_DISCONNECTED": 4,
		"BET_AMOUNT_UPDATE":     5,
		"PLAYER_JOINED_WR":      6,
		"ON_WR_CREATED":         7,
		"ON_PLAYER_READY":       8,
		"ON_WR_REMOVED":         9,
		"PLAYER_LEFT_WR":        10,
		"COUNTDOWN_UPDATE":      11,
		"GAME_READY_TO_PLAY":    12,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_pong_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_pong_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

type UnreadyGameStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnreadyGameStreamRequest) Reset() {
	*x = UnreadyGameStreamRequest{}
	mi := &file_pong_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnreadyGameStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadyGameStreamRequest) ProtoMessage() {}

func (x *UnreadyGameStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadyGameStreamRequest.ProtoReflect.Descriptor instead.
func (*UnreadyGameStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

func (x *UnreadyGameStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type UnreadyGameStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnreadyGameStreamResponse) Reset() {
	*x = UnreadyGameStreamResponse{}
	mi := &file_pong_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnreadyGameStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadyGameStreamResponse) ProtoMessage() {}

func (x *UnreadyGameStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadyGameStreamResponse.ProtoReflect.Descriptor instead.
func (*UnreadyGameStreamResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{1}
}

type StartNtfnStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartNtfnStreamRequest) Reset() {
	*x = StartNtfnStreamRequest{}
	mi := &file_pong_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartNtfnStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartNtfnStreamRequest) ProtoMessage() {}

func (x *StartNtfnStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartNtfnStreamRequest.ProtoReflect.Descriptor instead.
func (*StartNtfnStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{2}
}

func (x *StartNtfnStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type NtfnStreamResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NotificationType NotificationType       `protobuf:"varint,1,opt,name=notification_type,json=notificationType,proto3,enum=pong.NotificationType" json:"notification_type,omitempty"` // Type of the notification
	Started          bool                   `protobuf:"varint,2,opt,name=started,proto3" json:"started,omitempty"`
	GameId           string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Message          string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"` // message or additional details
	BetAmt           int64                  `protobuf:"varint,5,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
	PlayerNumber     int32                  `protobuf:"varint,6,opt,name=player_number,json=playerNumber,proto3" json:"player_number,omitempty"` // Player 1 or Player 2
	PlayerId         string                 `protobuf:"bytes,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId           string                 `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Wr               *WaitingRoom           `protobuf:"bytes,9,opt,name=wr,proto3" json:"wr,omitempty"`
	Ready            bool                   `protobuf:"varint,10,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NtfnStreamResponse) Reset() {
	*x = NtfnStreamResponse{}
	mi := &file_pong_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NtfnStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfnStreamResponse) ProtoMessage() {}

func (x *NtfnStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfnStreamResponse.ProtoReflect.Descriptor instead.
func (*NtfnStreamResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{3}
}

func (x *NtfnStreamResponse) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_UNKNOWN
}

func (x *NtfnStreamResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *NtfnStreamResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *NtfnStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NtfnStreamResponse) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *NtfnStreamResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NtfnStreamResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

func (x *NtfnStreamResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// Waiting Room Messages
type WaitingRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomsRequest) Reset() {
	*x = WaitingRoomsRequest{}
	mi := &file_pong_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsRequest) ProtoMessage() {}

func (x *WaitingRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomsRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{4}
}

func (x *WaitingRoomsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type WaitingRoomsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            []*WaitingRoom         `protobuf:"bytes,1,rep,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomsResponse) Reset() {
	*x = WaitingRoomsResponse{}
	mi := &file_pong_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsResponse) ProtoMessage() {}

func (x *WaitingRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomsResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{5}
}

func (x *WaitingRoomsResponse) GetWr() []*WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type JoinWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinWaitingRoomRequest) Reset() {
	*x = JoinWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomRequest) ProtoMessage() {}

func (x *JoinWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{6}
}

func (x *JoinWaitingRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinWaitingRoomRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type JoinWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            *WaitingRoom           `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinWaitingRoomResponse) Reset() {
	*x = JoinWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomResponse) ProtoMessage() {}

func (x *JoinWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{7}
}

func (x *JoinWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type CreateWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	BetAmt        int64                  `protobuf:"varint,2,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitingRoomRequest) Reset() {
	*x = CreateWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomRequest) ProtoMessage() {}

func (x *CreateWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWaitingRoomRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CreateWaitingRoomRequest) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

type CreateWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            *WaitingRoom           `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitingRoomResponse) Reset() {
	*x = CreateWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomResponse) ProtoMessage() {}

func (x *CreateWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type WaitingRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HostId        string                 `protobuf:"bytes,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Players       []*Player              `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	BetAmt        int64                  `protobuf:"varint,4,opt,name=bet_amt,json=betAmt,proto3" json:"bet_amt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoom) Reset() {
	*x = WaitingRoom{}
	mi := &file_pong_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoom) ProtoMessage() {}

func (x *WaitingRoom) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoom.ProtoReflect.Descriptor instead.
func (*WaitingRoom) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{10}
}

func (x *WaitingRoom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WaitingRoom) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *WaitingRoom) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *WaitingRoom) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

type WaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomRequest) Reset() {
	*x = WaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomRequest) ProtoMessage() {}

func (x *WaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{11}
}

type WaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*Player              `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomResponse) Reset() {
	*x = WaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomResponse) ProtoMessage() {}

func (x *WaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{12}
}

func (x *WaitingRoomResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

// Game Messages
type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nick          string                 `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	BetAmt        int64                  `protobuf:"varint,3,opt,name=bet_amt,json=betAmt,proto3" json:"bet_amt,omitempty"`
	Number        int32                  `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Score         int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Ready         bool                   `protobuf:"varint,6,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_pong_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{13}
}

func (x *Player) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Player) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Player) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *Player) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Player) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Player) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// SignalReadyRequest contains information about the client signaling readiness
type StartGameStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameStreamRequest) Reset() {
	*x = StartGameStreamRequest{}
	mi := &file_pong_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameStreamRequest) ProtoMessage() {}

func (x *StartGameStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameStreamRequest.ProtoReflect.Descriptor instead.
func (*StartGameStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{14}
}

func (x *StartGameStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GameUpdateBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUpdateBytes) Reset() {
	*x = GameUpdateBytes{}
	mi := &file_pong_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUpdateBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdateBytes) ProtoMessage() {}

func (x *GameUpdateBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdateBytes.ProtoReflect.Descriptor instead.
func (*GameUpdateBytes) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{15}
}

func (x *GameUpdateBytes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlayerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Input         string                 `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`                                    // e.g., "ArrowUp", "ArrowDown"
	PlayerNumber  int32                  `protobuf:"varint,3,opt,name=player_number,json=playerNumber,proto3" json:"player_number,omitempty"` // player 1 or player 2.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	mi := &file_pong_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerInput) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInput) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *PlayerInput) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

type GameUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameWidth     float64                `protobuf:"fixed64,13,opt,name=gameWidth,proto3" json:"gameWidth,omitempty"`
	GameHeight    float64                `protobuf:"fixed64,14,opt,name=gameHeight,proto3" json:"gameHeight,omitempty"`
	P1Width       float64                `protobuf:"fixed64,15,opt,name=p1Width,proto3" json:"p1Width,omitempty"`
	P1Height      float64                `protobuf:"fixed64,16,opt,name=p1Height,proto3" json:"p1Height,omitempty"`
	P2Width       float64                `protobuf:"fixed64,17,opt,name=p2Width,proto3" json:"p2Width,omitempty"`
	P2Height      float64                `protobuf:"fixed64,18,opt,name=p2Height,proto3" json:"p2Height,omitempty"`
	BallWidth     float64                `protobuf:"fixed64,19,opt,name=ballWidth,proto3" json:"ballWidth,omitempty"`
	BallHeight    float64                `protobuf:"fixed64,20,opt,name=ballHeight,proto3" json:"ballHeight,omitempty"`
	P1Score       int32                  `protobuf:"varint,21,opt,name=p1Score,proto3" json:"p1Score,omitempty"`
	P2Score       int32                  `protobuf:"varint,22,opt,name=p2Score,proto3" json:"p2Score,omitempty"`
	BallX         float64                `protobuf:"fixed64,1,opt,name=ballX,proto3" json:"ballX,omitempty"`
	BallY         float64                `protobuf:"fixed64,2,opt,name=ballY,proto3" json:"ballY,omitempty"`
	P1X           float64                `protobuf:"fixed64,3,opt,name=p1X,proto3" json:"p1X,omitempty"`
	P1Y           float64                `protobuf:"fixed64,4,opt,name=p1Y,proto3" json:"p1Y,omitempty"`
	P2X           float64                `protobuf:"fixed64,5,opt,name=p2X,proto3" json:"p2X,omitempty"`
	P2Y           float64                `protobuf:"fixed64,6,opt,name=p2Y,proto3" json:"p2Y,omitempty"`
	P1YVelocity   float64                `protobuf:"fixed64,7,opt,name=p1YVelocity,proto3" json:"p1YVelocity,omitempty"`
	P2YVelocity   float64                `protobuf:"fixed64,8,opt,name=p2YVelocity,proto3" json:"p2YVelocity,omitempty"`
	BallXVelocity float64                `protobuf:"fixed64,9,opt,name=ballXVelocity,proto3" json:"ballXVelocity,omitempty"`
	BallYVelocity float64                `protobuf:"fixed64,10,opt,name=ballYVelocity,proto3" json:"ballYVelocity,omitempty"`
	Fps           float64                `protobuf:"fixed64,11,opt,name=fps,proto3" json:"fps,omitempty"`
	Tps           float64                `protobuf:"fixed64,12,opt,name=tps,proto3" json:"tps,omitempty"`
	// Optional: if you want to send error messages or debug information
	Error         string `protobuf:"bytes,23,opt,name=error,proto3" json:"error,omitempty"`
	Debug         bool   `protobuf:"varint,24,opt,name=debug,proto3" json:"debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUpdate) Reset() {
	*x = GameUpdate{}
	mi := &file_pong_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdate) ProtoMessage() {}

func (x *GameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdate.ProtoReflect.Descriptor instead.
func (*GameUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{17}
}

func (x *GameUpdate) GetGameWidth() float64 {
	if x != nil {
		return x.GameWidth
	}
	return 0
}

func (x *GameUpdate) GetGameHeight() float64 {
	if x != nil {
		return x.GameHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Width() float64 {
	if x != nil {
		return x.P1Width
	}
	return 0
}

func (x *GameUpdate) GetP1Height() float64 {
	if x != nil {
		return x.P1Height
	}
	return 0
}

func (x *GameUpdate) GetP2Width() float64 {
	if x != nil {
		return x.P2Width
	}
	return 0
}

func (x *GameUpdate) GetP2Height() float64 {
	if x != nil {
		return x.P2Height
	}
	return 0
}

func (x *GameUpdate) GetBallWidth() float64 {
	if x != nil {
		return x.BallWidth
	}
	return 0
}

func (x *GameUpdate) GetBallHeight() float64 {
	if x != nil {
		return x.BallHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Score() int32 {
	if x != nil {
		return x.P1Score
	}
	return 0
}

func (x *GameUpdate) GetP2Score() int32 {
	if x != nil {
		return x.P2Score
	}
	return 0
}

func (x *GameUpdate) GetBallX() float64 {
	if x != nil {
		return x.BallX
	}
	return 0
}

func (x *GameUpdate) GetBallY() float64 {
	if x != nil {
		return x.BallY
	}
	return 0
}

func (x *GameUpdate) GetP1X() float64 {
	if x != nil {
		return x.P1X
	}
	return 0
}

func (x *GameUpdate) GetP1Y() float64 {
	if x != nil {
		return x.P1Y
	}
	return 0
}

func (x *GameUpdate) GetP2X() float64 {
	if x != nil {
		return x.P2X
	}
	return 0
}

func (x *GameUpdate) GetP2Y() float64 {
	if x != nil {
		return x.P2Y
	}
	return 0
}

func (x *GameUpdate) GetP1YVelocity() float64 {
	if x != nil {
		return x.P1YVelocity
	}
	return 0
}

func (x *GameUpdate) GetP2YVelocity() float64 {
	if x != nil {
		return x.P2YVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallXVelocity() float64 {
	if x != nil {
		return x.BallXVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallYVelocity() float64 {
	if x != nil {
		return x.BallYVelocity
	}
	return 0
}

func (x *GameUpdate) GetFps() float64 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *GameUpdate) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *GameUpdate) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GameUpdate) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type LeaveWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveWaitingRoomRequest) Reset() {
	*x = LeaveWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWaitingRoomRequest) ProtoMessage() {}

func (x *LeaveWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{18}
}

func (x *LeaveWaitingRoomRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LeaveWaitingRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type LeaveWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveWaitingRoomResponse) Reset() {
	*x = LeaveWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWaitingRoomResponse) ProtoMessage() {}

func (x *LeaveWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{19}
}

func (x *LeaveWaitingRoomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveWaitingRoomResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SignalReadyToPlayRequest contains information about the client signaling readiness
type SignalReadyToPlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalReadyToPlayRequest) Reset() {
	*x = SignalReadyToPlayRequest{}
	mi := &file_pong_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalReadyToPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReadyToPlayRequest) ProtoMessage() {}

func (x *SignalReadyToPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReadyToPlayRequest.ProtoReflect.Descriptor instead.
func (*SignalReadyToPlayRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{20}
}

func (x *SignalReadyToPlayRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SignalReadyToPlayRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// SignalReadyToPlayResponse contains the result of the ready signal
type SignalReadyToPlayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalReadyToPlayResponse) Reset() {
	*x = SignalReadyToPlayResponse{}
	mi := &file_pong_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalReadyToPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReadyToPlayResponse) ProtoMessage() {}

func (x *SignalReadyToPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReadyToPlayResponse.ProtoReflect.Descriptor instead.
func (*SignalReadyToPlayResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{21}
}

func (x *SignalReadyToPlayResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SignalReadyToPlayResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pong_proto protoreflect.FileDescriptor

const file_pong_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"pong.proto\x12\x04pong\"7\n" +
	"\x18UnreadyGameStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\x1b\n" +
	"\x19UnreadyGameStreamResponse\"5\n" +
	"\x16StartNtfnStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\xd2\x02\n" +
	"\x12NtfnStreamResponse\x12C\n" +
	"\x11notification_type\x18\x01 \x01(\x0e2\x16.pong.NotificationTypeR\x10notificationType\x12\x18\n" +
	"\astarted\x18\x02 \x01(\bR\astarted\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\tR\x06gameId\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x16\n" +
	"\x06betAmt\x18\x05 \x01(\x03R\x06betAmt\x12#\n" +
	"\rplayer_number\x18\x06 \x01(\x05R\fplayerNumber\x12\x1b\n" +
	"\tplayer_id\x18\a \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\b \x01(\tR\x06roomId\x12!\n" +
	"\x02wr\x18\t \x01(\v2\x11.pong.WaitingRoomR\x02wr\x12\x14\n" +
	"\x05ready\x18\n" +
	" \x01(\bR\x05ready\".\n" +
	"\x13WaitingRoomsRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\"9\n" +
	"\x14WaitingRoomsResponse\x12!\n" +
	"\x02wr\x18\x01 \x03(\v2\x11.pong.WaitingRoomR\x02wr\"N\n" +
	"\x16JoinWaitingRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\"<\n" +
	"\x17JoinWaitingRoomResponse\x12!\n" +
	"\x02wr\x18\x01 \x01(\v2\x11.pong.WaitingRoomR\x02wr\"K\n" +
	"\x18CreateWaitingRoomRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x16\n" +
	"\x06betAmt\x18\x02 \x01(\x03R\x06betAmt\">\n" +
	"\x19CreateWaitingRoomResponse\x12!\n" +
	"\x02wr\x18\x01 \x01(\v2\x11.pong.WaitingRoomR\x02wr\"w\n" +
	"\vWaitingRoom\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\ahost_id\x18\x02 \x01(\tR\x06hostId\x12&\n" +
	"\aplayers\x18\x03 \x03(\v2\f.pong.PlayerR\aplayers\x12\x17\n" +
	"\abet_amt\x18\x04 \x01(\x03R\x06betAmt\"\x14\n" +
	"\x12WaitingRoomRequest\"=\n" +
	"\x13WaitingRoomResponse\x12&\n" +
	"\aplayers\x18\x01 \x03(\v2\f.pong.PlayerR\aplayers\"\x8b\x01\n" +
	"\x06Player\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x12\n" +
	"\x04nick\x18\x02 \x01(\tR\x04nick\x12\x17\n" +
	"\abet_amt\x18\x03 \x01(\x03R\x06betAmt\x12\x16\n" +
	"\x06number\x18\x04 \x01(\x05R\x06number\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12\x14\n" +
	"\x05ready\x18\x06 \x01(\bR\x05ready\"5\n" +
	"\x16StartGameStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"%\n" +
	"\x0fGameUpdateBytes\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"e\n" +
	"\vPlayerInput\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x14\n" +
	"\x05input\x18\x02 \x01(\tR\x05input\x12#\n" +
	"\rplayer_number\x18\x03 \x01(\x05R\fplayerNumber\"\xfc\x04\n" +
	"\n" +
	"GameUpdate\x12\x1c\n" +
	"\tgameWidth\x18\r \x01(\x01R\tgameWidth\x12\x1e\n" +
	"\n" +
	"gameHeight\x18\x0e \x01(\x01R\n" +
	"gameHeight\x12\x18\n" +
	"\ap1Width\x18\x0f \x01(\x01R\ap1Width\x12\x1a\n" +
	"\bp1Height\x18\x10 \x01(\x01R\bp1Height\x12\x18\n" +
	"\ap2Width\x18\x11 \x01(\x01R\ap2Width\x12\x1a\n" +
	"\bp2Height\x18\x12 \x01(\x01R\bp2Height\x12\x1c\n" +
	"\tballWidth\x18\x13 \x01(\x01R\tballWidth\x12\x1e\n" +
	"\n" +
	"ballHeight\x18\x14 \x01(\x01R\n" +
	"ballHeight\x12\x18\n" +
	"\ap1Score\x18\x15 \x01(\x05R\ap1Score\x12\x18\n" +
	"\ap2Score\x18\x16 \x01(\x05R\ap2Score\x12\x14\n" +
	"\x05ballX\x18\x01 \x01(\x01R\x05ballX\x12\x14\n" +
	"\x05ballY\x18\x02 \x01(\x01R\x05ballY\x12\x10\n" +
	"\x03p1X\x18\x03 \x01(\x01R\x03p1X\x12\x10\n" +
	"\x03p1Y\x18\x04 \x01(\x01R\x03p1Y\x12\x10\n" +
	"\x03p2X\x18\x05 \x01(\x01R\x03p2X\x12\x10\n" +
	"\x03p2Y\x18\x06 \x01(\x01R\x03p2Y\x12 \n" +
	"\vp1YVelocity\x18\a \x01(\x01R\vp1YVelocity\x12 \n" +
	"\vp2YVelocity\x18\b \x01(\x01R\vp2YVelocity\x12$\n" +
	"\rballXVelocity\x18\t \x01(\x01R\rballXVelocity\x12$\n" +
	"\rballYVelocity\x18\n" +
	" \x01(\x01R\rballYVelocity\x12\x10\n" +
	"\x03fps\x18\v \x01(\x01R\x03fps\x12\x10\n" +
	"\x03tps\x18\f \x01(\x01R\x03tps\x12\x14\n" +
	"\x05error\x18\x17 \x01(\tR\x05error\x12\x14\n" +
	"\x05debug\x18\x18 \x01(\bR\x05debug\"O\n" +
	"\x17LeaveWaitingRoomRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\"N\n" +
	"\x18LeaveWaitingRoomResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"P\n" +
	"\x18SignalReadyToPlayRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\"O\n" +
	"\x19SignalReadyToPlayResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\x8f\x02\n" +
	"\x10NotificationType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aMESSAGE\x10\x01\x12\x0e\n" +
	"\n" +
	"GAME_START\x10\x02\x12\f\n" +
	"\bGAME_END\x10\x03\x12\x19\n" +
	"\x15OPPONENT_DISCONNECTED\x10\x04\x12\x15\n" +
	"\x11BET_AMOUNT_UPDATE\x10\x05\x12\x14\n" +
	"\x10PLAYER_JOINED_WR\x10\x06\x12\x11\n" +
	"\rON_WR_CREATED\x10\a\x12\x13\n" +
	"\x0fON_PLAYER_READY\x10\b\x12\x11\n" +
	"\rON_WR_REMOVED\x10\t\x12\x12\n" +
	"\x0ePLAYER_LEFT_WR\x10\n" +
	"\x12\x14\n" +
	"\x10COUNTDOWN_UPDATE\x10\v\x12\x16\n" +
	"\x12GAME_READY_TO_PLAY\x10\f2\x8b\x06\n" +
	"\bPongGame\x122\n" +
	"\tSendInput\x12\x11.pong.PlayerInput\x1a\x10.pong.GameUpdate\"\x00\x12H\n" +
	"\x0fStartGameStream\x12\x1c.pong.StartGameStreamRequest\x1a\x15.pong.GameUpdateBytes0\x01\x12K\n" +
	"\x0fStartNtfnStream\x12\x1c.pong.StartNtfnStreamRequest\x1a\x18.pong.NtfnStreamResponse0\x01\x12T\n" +
	"\x11UnreadyGameStream\x12\x1e.pong.UnreadyGameStreamRequest\x1a\x1f.pong.UnreadyGameStreamResponse\x12T\n" +
	"\x11SignalReadyToPlay\x12\x1e.pong.SignalReadyToPlayRequest\x1a\x1f.pong.SignalReadyToPlayResponse\x12E\n" +
	"\x0eGetWaitingRoom\x12\x18.pong.WaitingRoomRequest\x1a\x19.pong.WaitingRoomResponse\x12H\n" +
	"\x0fGetWaitingRooms\x12\x19.pong.WaitingRoomsRequest\x1a\x1a.pong.WaitingRoomsResponse\x12T\n" +
	"\x11CreateWaitingRoom\x12\x1e.pong.CreateWaitingRoomRequest\x1a\x1f.pong.CreateWaitingRoomResponse\x12N\n" +
	"\x0fJoinWaitingRoom\x12\x1c.pong.JoinWaitingRoomRequest\x1a\x1d.pong.JoinWaitingRoomResponse\x12Q\n" +
	"\x10LeaveWaitingRoom\x12\x1d.pong.LeaveWaitingRoomRequest\x1a\x1e.pong.LeaveWaitingRoomResponseB\vZ\tgrpc/pongb\x06proto3"

var (
	file_pong_proto_rawDescOnce sync.Once
	file_pong_proto_rawDescData []byte
)

func file_pong_proto_rawDescGZIP() []byte {
	file_pong_proto_rawDescOnce.Do(func() {
		file_pong_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pong_proto_rawDesc), len(file_pong_proto_rawDesc)))
	})
	return file_pong_proto_rawDescData
}

var file_pong_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pong_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pong_proto_goTypes = []any{
	(NotificationType)(0),             // 0: pong.NotificationType
	(*UnreadyGameStreamRequest)(nil),  // 1: pong.UnreadyGameStreamRequest
	(*UnreadyGameStreamResponse)(nil), // 2: pong.UnreadyGameStreamResponse
	(*StartNtfnStreamRequest)(nil),    // 3: pong.StartNtfnStreamRequest
	(*NtfnStreamResponse)(nil),        // 4: pong.NtfnStreamResponse
	(*WaitingRoomsRequest)(nil),       // 5: pong.WaitingRoomsRequest
	(*WaitingRoomsResponse)(nil),      // 6: pong.WaitingRoomsResponse
	(*JoinWaitingRoomRequest)(nil),    // 7: pong.JoinWaitingRoomRequest
	(*JoinWaitingRoomResponse)(nil),   // 8: pong.JoinWaitingRoomResponse
	(*CreateWaitingRoomRequest)(nil),  // 9: pong.CreateWaitingRoomRequest
	(*CreateWaitingRoomResponse)(nil), // 10: pong.CreateWaitingRoomResponse
	(*WaitingRoom)(nil),               // 11: pong.WaitingRoom
	(*WaitingRoomRequest)(nil),        // 12: pong.WaitingRoomRequest
	(*WaitingRoomResponse)(nil),       // 13: pong.WaitingRoomResponse
	(*Player)(nil),                    // 14: pong.Player
	(*StartGameStreamRequest)(nil),    // 15: pong.StartGameStreamRequest
	(*GameUpdateBytes)(nil),           // 16: pong.GameUpdateBytes
	(*PlayerInput)(nil),               // 17: pong.PlayerInput
	(*GameUpdate)(nil),                // 18: pong.GameUpdate
	(*LeaveWaitingRoomRequest)(nil),   // 19: pong.LeaveWaitingRoomRequest
	(*LeaveWaitingRoomResponse)(nil),  // 20: pong.LeaveWaitingRoomResponse
	(*SignalReadyToPlayRequest)(nil),  // 21: pong.SignalReadyToPlayRequest
	(*SignalReadyToPlayResponse)(nil), // 22: pong.SignalReadyToPlayResponse
}
var file_pong_proto_depIdxs = []int32{
	0,  // 0: pong.NtfnStreamResponse.notification_type:type_name -> pong.NotificationType
	11, // 1: pong.NtfnStreamResponse.wr:type_name -> pong.WaitingRoom
	11, // 2: pong.WaitingRoomsResponse.wr:type_name -> pong.WaitingRoom
	11, // 3: pong.JoinWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	11, // 4: pong.CreateWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	14, // 5: pong.WaitingRoom.players:type_name -> pong.Player
	14, // 6: pong.WaitingRoomResponse.players:type_name -> pong.Player
	17, // 7: pong.PongGame.SendInput:input_type -> pong.PlayerInput
	15, // 8: pong.PongGame.StartGameStream:input_type -> pong.StartGameStreamRequest
	3,  // 9: pong.PongGame.StartNtfnStream:input_type -> pong.StartNtfnStreamRequest
	1,  // 10: pong.PongGame.UnreadyGameStream:input_type -> pong.UnreadyGameStreamRequest
	21, // 11: pong.PongGame.SignalReadyToPlay:input_type -> pong.SignalReadyToPlayRequest
	12, // 12: pong.PongGame.GetWaitingRoom:input_type -> pong.WaitingRoomRequest
	5,  // 13: pong.PongGame.GetWaitingRooms:input_type -> pong.WaitingRoomsRequest
	9,  // 14: pong.PongGame.CreateWaitingRoom:input_type -> pong.CreateWaitingRoomRequest
	7,  // 15: pong.PongGame.JoinWaitingRoom:input_type -> pong.JoinWaitingRoomRequest
	19, // 16: pong.PongGame.LeaveWaitingRoom:input_type -> pong.LeaveWaitingRoomRequest
	18, // 17: pong.PongGame.SendInput:output_type -> pong.GameUpdate
	16, // 18: pong.PongGame.StartGameStream:output_type -> pong.GameUpdateBytes
	4,  // 19: pong.PongGame.StartNtfnStream:output_type -> pong.NtfnStreamResponse
	2,  // 20: pong.PongGame.UnreadyGameStream:output_type -> pong.UnreadyGameStreamResponse
	22, // 21: pong.PongGame.SignalReadyToPlay:output_type -> pong.SignalReadyToPlayResponse
	13, // 22: pong.PongGame.GetWaitingRoom:output_type -> pong.WaitingRoomResponse
	6,  // 23: pong.PongGame.GetWaitingRooms:output_type -> pong.WaitingRoomsResponse
	10, // 24: pong.PongGame.CreateWaitingRoom:output_type -> pong.CreateWaitingRoomResponse
	8,  // 25: pong.PongGame.JoinWaitingRoom:output_type -> pong.JoinWaitingRoomResponse
	20, // 26: pong.PongGame.LeaveWaitingRoom:output_type -> pong.LeaveWaitingRoomResponse
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pong_proto_init() }
func file_pong_proto_init() {
	if File_pong_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pong_proto_rawDesc), len(file_pong_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pong_proto_goTypes,
		DependencyIndexes: file_pong_proto_depIdxs,
		EnumInfos:         file_pong_proto_enumTypes,
		MessageInfos:      file_pong_proto_msgTypes,
	}.Build()
	File_pong_proto = out.File
	file_pong_proto_goTypes = nil
	file_pong_proto_depIdxs = nil
}
