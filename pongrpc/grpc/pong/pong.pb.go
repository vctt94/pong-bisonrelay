// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pong.proto

package pong

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotificationType int32

const (
	NotificationType_UNKNOWN               NotificationType = 0
	NotificationType_MESSAGE               NotificationType = 1
	NotificationType_GAME_START            NotificationType = 2
	NotificationType_GAME_END              NotificationType = 3
	NotificationType_OPPONENT_DISCONNECTED NotificationType = 4
	NotificationType_BET_AMOUNT_UPDATE     NotificationType = 5
	NotificationType_PLAYER_JOINED_WR      NotificationType = 6
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "UNKNOWN",
		1: "MESSAGE",
		2: "GAME_START",
		3: "GAME_END",
		4: "OPPONENT_DISCONNECTED",
		5: "BET_AMOUNT_UPDATE",
		6: "PLAYER_JOINED_WR",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN":               0,
		"MESSAGE":               1,
		"GAME_START":            2,
		"GAME_END":              3,
		"OPPONENT_DISCONNECTED": 4,
		"BET_AMOUNT_UPDATE":     5,
		"PLAYER_JOINED_WR":      6,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_pong_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_pong_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

type WaitingRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *WaitingRoomsRequest) Reset() {
	*x = WaitingRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsRequest) ProtoMessage() {}

func (x *WaitingRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomsRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

func (x *WaitingRoomsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type WaitingRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wr []*WaitingRoom `protobuf:"bytes,1,rep,name=wr,proto3" json:"wr,omitempty"`
}

func (x *WaitingRoomsResponse) Reset() {
	*x = WaitingRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsResponse) ProtoMessage() {}

func (x *WaitingRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomsResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{1}
}

func (x *WaitingRoomsResponse) GetWr() []*WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type JoinWaitingRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *JoinWaitingRoomRequest) Reset() {
	*x = JoinWaitingRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomRequest) ProtoMessage() {}

func (x *JoinWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{2}
}

func (x *JoinWaitingRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinWaitingRoomRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type JoinWaitingRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wr *WaitingRoom `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
}

func (x *JoinWaitingRoomResponse) Reset() {
	*x = JoinWaitingRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomResponse) ProtoMessage() {}

func (x *JoinWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{3}
}

func (x *JoinWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type CreateWaitingRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string  `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	BetAmt float64 `protobuf:"fixed64,2,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
}

func (x *CreateWaitingRoomRequest) Reset() {
	*x = CreateWaitingRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomRequest) ProtoMessage() {}

func (x *CreateWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{4}
}

func (x *CreateWaitingRoomRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CreateWaitingRoomRequest) GetBetAmt() float64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

type CreateWaitingRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wr *WaitingRoom `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
}

func (x *CreateWaitingRoomResponse) Reset() {
	*x = CreateWaitingRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomResponse) ProtoMessage() {}

func (x *CreateWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type WaitingRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HostId  string    `protobuf:"bytes,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Players []*Player `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	BetAmt  float64   `protobuf:"fixed64,4,opt,name=bet_amt,json=betAmt,proto3" json:"bet_amt,omitempty"`
}

func (x *WaitingRoom) Reset() {
	*x = WaitingRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoom) ProtoMessage() {}

func (x *WaitingRoom) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoom.ProtoReflect.Descriptor instead.
func (*WaitingRoom) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{6}
}

func (x *WaitingRoom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WaitingRoom) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *WaitingRoom) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *WaitingRoom) GetBetAmt() float64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

type WaitingRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitingRoomRequest) Reset() {
	*x = WaitingRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomRequest) ProtoMessage() {}

func (x *WaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{7}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nick      string  `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	BetAmount float64 `protobuf:"fixed64,3,opt,name=betAmount,proto3" json:"betAmount,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{8}
}

func (x *Player) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Player) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Player) GetBetAmount() float64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

type WaitingRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *WaitingRoomResponse) Reset() {
	*x = WaitingRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomResponse) ProtoMessage() {}

func (x *WaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{9}
}

func (x *WaitingRoomResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type StartNtfnStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *StartNtfnStreamRequest) Reset() {
	*x = StartNtfnStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartNtfnStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartNtfnStreamRequest) ProtoMessage() {}

func (x *StartNtfnStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartNtfnStreamRequest.ProtoReflect.Descriptor instead.
func (*StartNtfnStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{10}
}

func (x *StartNtfnStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type NtfnStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationType NotificationType `protobuf:"varint,1,opt,name=notification_type,json=notificationType,proto3,enum=pong.NotificationType" json:"notification_type,omitempty"` // Type of the notification
	Started          bool             `protobuf:"varint,2,opt,name=started,proto3" json:"started,omitempty"`
	GameId           string           `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Message          string           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"` // Optional message or additional details
	BetAmt           float64          `protobuf:"fixed64,5,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
	PlayerNumber     int32            `protobuf:"varint,6,opt,name=player_number,json=playerNumber,proto3" json:"player_number,omitempty"` // Player 1 or Player 2
	PlayerId         string           `protobuf:"bytes,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId           string           `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Wr               *WaitingRoom     `protobuf:"bytes,9,opt,name=wr,proto3" json:"wr,omitempty"`
}

func (x *NtfnStreamResponse) Reset() {
	*x = NtfnStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfnStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfnStreamResponse) ProtoMessage() {}

func (x *NtfnStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfnStreamResponse.ProtoReflect.Descriptor instead.
func (*NtfnStreamResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{11}
}

func (x *NtfnStreamResponse) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_UNKNOWN
}

func (x *NtfnStreamResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *NtfnStreamResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *NtfnStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NtfnStreamResponse) GetBetAmt() float64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *NtfnStreamResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NtfnStreamResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

// SignalReadyRequest contains information about the client signaling readiness
type StartGameStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *StartGameStreamRequest) Reset() {
	*x = StartGameStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameStreamRequest) ProtoMessage() {}

func (x *StartGameStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameStreamRequest.ProtoReflect.Descriptor instead.
func (*StartGameStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{12}
}

func (x *StartGameStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GameUpdateBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameUpdateBytes) Reset() {
	*x = GameUpdateBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUpdateBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdateBytes) ProtoMessage() {}

func (x *GameUpdateBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdateBytes.ProtoReflect.Descriptor instead.
func (*GameUpdateBytes) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{13}
}

func (x *GameUpdateBytes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlayerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Input        string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`                // e.g., "ArrowUp", "ArrowDown"
	PlayerNumber int32  `protobuf:"varint,3,opt,name=playerNumber,proto3" json:"playerNumber,omitempty"` // player 1 or player 2.
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerInput) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInput) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *PlayerInput) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

type GameUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameWidth     float64 `protobuf:"fixed64,13,opt,name=gameWidth,proto3" json:"gameWidth,omitempty"`
	GameHeight    float64 `protobuf:"fixed64,14,opt,name=gameHeight,proto3" json:"gameHeight,omitempty"`
	P1Width       float64 `protobuf:"fixed64,15,opt,name=p1Width,proto3" json:"p1Width,omitempty"`
	P1Height      float64 `protobuf:"fixed64,16,opt,name=p1Height,proto3" json:"p1Height,omitempty"`
	P2Width       float64 `protobuf:"fixed64,17,opt,name=p2Width,proto3" json:"p2Width,omitempty"`
	P2Height      float64 `protobuf:"fixed64,18,opt,name=p2Height,proto3" json:"p2Height,omitempty"`
	BallWidth     float64 `protobuf:"fixed64,19,opt,name=ballWidth,proto3" json:"ballWidth,omitempty"`
	BallHeight    float64 `protobuf:"fixed64,20,opt,name=ballHeight,proto3" json:"ballHeight,omitempty"`
	P1Score       int32   `protobuf:"varint,21,opt,name=p1Score,proto3" json:"p1Score,omitempty"`
	P2Score       int32   `protobuf:"varint,22,opt,name=p2Score,proto3" json:"p2Score,omitempty"`
	BallX         float64 `protobuf:"fixed64,1,opt,name=ballX,proto3" json:"ballX,omitempty"`
	BallY         float64 `protobuf:"fixed64,2,opt,name=ballY,proto3" json:"ballY,omitempty"`
	P1X           float64 `protobuf:"fixed64,3,opt,name=p1X,proto3" json:"p1X,omitempty"`
	P1Y           float64 `protobuf:"fixed64,4,opt,name=p1Y,proto3" json:"p1Y,omitempty"`
	P2X           float64 `protobuf:"fixed64,5,opt,name=p2X,proto3" json:"p2X,omitempty"`
	P2Y           float64 `protobuf:"fixed64,6,opt,name=p2Y,proto3" json:"p2Y,omitempty"`
	P1YVelocity   float64 `protobuf:"fixed64,7,opt,name=p1YVelocity,proto3" json:"p1YVelocity,omitempty"`
	P2YVelocity   float64 `protobuf:"fixed64,8,opt,name=p2YVelocity,proto3" json:"p2YVelocity,omitempty"`
	BallXVelocity float64 `protobuf:"fixed64,9,opt,name=ballXVelocity,proto3" json:"ballXVelocity,omitempty"`
	BallYVelocity float64 `protobuf:"fixed64,10,opt,name=ballYVelocity,proto3" json:"ballYVelocity,omitempty"`
	Fps           float64 `protobuf:"fixed64,11,opt,name=fps,proto3" json:"fps,omitempty"`
	Tps           float64 `protobuf:"fixed64,12,opt,name=tps,proto3" json:"tps,omitempty"`
	// Optional: if you want to send error messages or debug information
	Error string `protobuf:"bytes,23,opt,name=error,proto3" json:"error,omitempty"`
	Debug bool   `protobuf:"varint,24,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *GameUpdate) Reset() {
	*x = GameUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdate) ProtoMessage() {}

func (x *GameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdate.ProtoReflect.Descriptor instead.
func (*GameUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{15}
}

func (x *GameUpdate) GetGameWidth() float64 {
	if x != nil {
		return x.GameWidth
	}
	return 0
}

func (x *GameUpdate) GetGameHeight() float64 {
	if x != nil {
		return x.GameHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Width() float64 {
	if x != nil {
		return x.P1Width
	}
	return 0
}

func (x *GameUpdate) GetP1Height() float64 {
	if x != nil {
		return x.P1Height
	}
	return 0
}

func (x *GameUpdate) GetP2Width() float64 {
	if x != nil {
		return x.P2Width
	}
	return 0
}

func (x *GameUpdate) GetP2Height() float64 {
	if x != nil {
		return x.P2Height
	}
	return 0
}

func (x *GameUpdate) GetBallWidth() float64 {
	if x != nil {
		return x.BallWidth
	}
	return 0
}

func (x *GameUpdate) GetBallHeight() float64 {
	if x != nil {
		return x.BallHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Score() int32 {
	if x != nil {
		return x.P1Score
	}
	return 0
}

func (x *GameUpdate) GetP2Score() int32 {
	if x != nil {
		return x.P2Score
	}
	return 0
}

func (x *GameUpdate) GetBallX() float64 {
	if x != nil {
		return x.BallX
	}
	return 0
}

func (x *GameUpdate) GetBallY() float64 {
	if x != nil {
		return x.BallY
	}
	return 0
}

func (x *GameUpdate) GetP1X() float64 {
	if x != nil {
		return x.P1X
	}
	return 0
}

func (x *GameUpdate) GetP1Y() float64 {
	if x != nil {
		return x.P1Y
	}
	return 0
}

func (x *GameUpdate) GetP2X() float64 {
	if x != nil {
		return x.P2X
	}
	return 0
}

func (x *GameUpdate) GetP2Y() float64 {
	if x != nil {
		return x.P2Y
	}
	return 0
}

func (x *GameUpdate) GetP1YVelocity() float64 {
	if x != nil {
		return x.P1YVelocity
	}
	return 0
}

func (x *GameUpdate) GetP2YVelocity() float64 {
	if x != nil {
		return x.P2YVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallXVelocity() float64 {
	if x != nil {
		return x.BallXVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallYVelocity() float64 {
	if x != nil {
		return x.BallYVelocity
	}
	return 0
}

func (x *GameUpdate) GetFps() float64 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *GameUpdate) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *GameUpdate) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GameUpdate) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

var File_pong_proto protoreflect.FileDescriptor

var file_pong_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x13, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x02, 0x77, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x02, 0x77, 0x72, 0x22, 0x4e, 0x0a,
	0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a,
	0x17, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x02, 0x77, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x02, 0x77, 0x72, 0x22, 0x4b, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x74, 0x22, 0x3e, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x02, 0x77, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x02, 0x77, 0x72, 0x22, 0x77, 0x0a, 0x0b, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x5f,
	0x61, 0x6d, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x62, 0x65, 0x74, 0x41, 0x6d,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x74, 0x66,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x12,
	0x4e, 0x74, 0x66, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x02, 0x77, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x02, 0x77, 0x72, 0x22, 0x35, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xfc, 0x04,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x31,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x31, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x31, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x31, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x32, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x70, 0x32, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x32,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x32,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x32, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x32, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x6c, 0x6c,
	0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x58, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62,
	0x61, 0x6c, 0x6c, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x31, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x70, 0x31, 0x58, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x31, 0x59, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x31, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x32, 0x58, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x32, 0x58, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x32,
	0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x32, 0x59, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x31, 0x59, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x70, 0x31, 0x59, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x32, 0x59, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x32, 0x59, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x58, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x58, 0x56, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x59, 0x56,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x62,
	0x61, 0x6c, 0x6c, 0x59, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x70, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x70, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2a, 0x92, 0x01, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x45, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x57, 0x52, 0x10,
	0x06, 0x32, 0x8c, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x6f,
	0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10,
	0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x74, 0x66, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x74, 0x66, 0x6e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4e, 0x74, 0x66, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x6f,
	0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x1e, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0b, 0x5a, 0x09, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6f, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pong_proto_rawDescOnce sync.Once
	file_pong_proto_rawDescData = file_pong_proto_rawDesc
)

func file_pong_proto_rawDescGZIP() []byte {
	file_pong_proto_rawDescOnce.Do(func() {
		file_pong_proto_rawDescData = protoimpl.X.CompressGZIP(file_pong_proto_rawDescData)
	})
	return file_pong_proto_rawDescData
}

var file_pong_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pong_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pong_proto_goTypes = []interface{}{
	(NotificationType)(0),             // 0: pong.NotificationType
	(*WaitingRoomsRequest)(nil),       // 1: pong.WaitingRoomsRequest
	(*WaitingRoomsResponse)(nil),      // 2: pong.WaitingRoomsResponse
	(*JoinWaitingRoomRequest)(nil),    // 3: pong.JoinWaitingRoomRequest
	(*JoinWaitingRoomResponse)(nil),   // 4: pong.JoinWaitingRoomResponse
	(*CreateWaitingRoomRequest)(nil),  // 5: pong.CreateWaitingRoomRequest
	(*CreateWaitingRoomResponse)(nil), // 6: pong.CreateWaitingRoomResponse
	(*WaitingRoom)(nil),               // 7: pong.WaitingRoom
	(*WaitingRoomRequest)(nil),        // 8: pong.WaitingRoomRequest
	(*Player)(nil),                    // 9: pong.Player
	(*WaitingRoomResponse)(nil),       // 10: pong.WaitingRoomResponse
	(*StartNtfnStreamRequest)(nil),    // 11: pong.StartNtfnStreamRequest
	(*NtfnStreamResponse)(nil),        // 12: pong.NtfnStreamResponse
	(*StartGameStreamRequest)(nil),    // 13: pong.StartGameStreamRequest
	(*GameUpdateBytes)(nil),           // 14: pong.GameUpdateBytes
	(*PlayerInput)(nil),               // 15: pong.PlayerInput
	(*GameUpdate)(nil),                // 16: pong.GameUpdate
}
var file_pong_proto_depIdxs = []int32{
	7,  // 0: pong.WaitingRoomsResponse.wr:type_name -> pong.WaitingRoom
	7,  // 1: pong.JoinWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	7,  // 2: pong.CreateWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	9,  // 3: pong.WaitingRoom.players:type_name -> pong.Player
	9,  // 4: pong.WaitingRoomResponse.players:type_name -> pong.Player
	0,  // 5: pong.NtfnStreamResponse.notification_type:type_name -> pong.NotificationType
	7,  // 6: pong.NtfnStreamResponse.wr:type_name -> pong.WaitingRoom
	15, // 7: pong.PongGame.SendInput:input_type -> pong.PlayerInput
	13, // 8: pong.PongGame.StartGameStream:input_type -> pong.StartGameStreamRequest
	11, // 9: pong.PongGame.StartNtfnStream:input_type -> pong.StartNtfnStreamRequest
	8,  // 10: pong.PongGame.GetWaitingRoom:input_type -> pong.WaitingRoomRequest
	1,  // 11: pong.PongGame.GetWaitingRooms:input_type -> pong.WaitingRoomsRequest
	5,  // 12: pong.PongGame.CreateWaitingRoom:input_type -> pong.CreateWaitingRoomRequest
	3,  // 13: pong.PongGame.JoinWaitingRoom:input_type -> pong.JoinWaitingRoomRequest
	16, // 14: pong.PongGame.SendInput:output_type -> pong.GameUpdate
	14, // 15: pong.PongGame.StartGameStream:output_type -> pong.GameUpdateBytes
	12, // 16: pong.PongGame.StartNtfnStream:output_type -> pong.NtfnStreamResponse
	10, // 17: pong.PongGame.GetWaitingRoom:output_type -> pong.WaitingRoomResponse
	2,  // 18: pong.PongGame.GetWaitingRooms:output_type -> pong.WaitingRoomsResponse
	6,  // 19: pong.PongGame.CreateWaitingRoom:output_type -> pong.CreateWaitingRoomResponse
	4,  // 20: pong.PongGame.JoinWaitingRoom:output_type -> pong.JoinWaitingRoomResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pong_proto_init() }
func file_pong_proto_init() {
	if File_pong_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pong_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinWaitingRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinWaitingRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartNtfnStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtfnStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUpdateBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pong_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pong_proto_goTypes,
		DependencyIndexes: file_pong_proto_depIdxs,
		EnumInfos:         file_pong_proto_enumTypes,
		MessageInfos:      file_pong_proto_msgTypes,
	}.Build()
	File_pong_proto = out.File
	file_pong_proto_rawDesc = nil
	file_pong_proto_goTypes = nil
	file_pong_proto_depIdxs = nil
}
